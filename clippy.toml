# There is also a scripts/clippy_wasm/clippy.toml which forbids some methods that are not available in wasm.

# -----------------------------------------------------------------------------
# Section identical to scripts/clippy_wasm/clippy.toml:

msrv = "1.90.0"

allow-unwrap-in-tests = true

# https://doc.rust-lang.org/nightly/clippy/lint_configuration.html#avoid-breaking-exported-api
# We want suggestions, even if it changes public API.
avoid-breaking-exported-api = false

max-fn-params-bools = 2 # TODO: decrease this to 1

# https://rust-lang.github.io/rust-clippy/master/index.html#/large_include_file
max-include-file-size = 1000000

# https://rust-lang.github.io/rust-clippy/master/index.html#/type_complexity
type-complexity-threshold = 350

# -----------------------------------------------------------------------------

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_macros
disallowed-macros = [
  'std::unimplemented',

  # TODO: consider forbidding these to encourage the use of proper log stream, and then explicitly allow legitimate uses
  # 'std::eprint',
  # 'std::eprintln',
  # 'std::print',
  # 'std::println',
]

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_methods
disallowed-methods = [
  "std::env::temp_dir", # Use the tempdir crate instead

  "sha1::Digest::new",        # SHA1 is cryptographically broken
  "std::panic::catch_unwind", # We compile with `panic = "abort"`
  "std::thread::spawn",       # Use `std::thread::Builder` and name the thread
]

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_names
disallowed-names = []

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_types
disallowed-types = [
  # Use the faster & simpler non-poisonable primitives in `parking_lot` instead
  "std::sync::Condvar",
  "std::sync::Mutex",
  "std::sync::RwLock",
]
